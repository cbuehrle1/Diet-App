{"version":3,"sources":["components/EditDietComponent.js"],"names":["window","FC","undefined","EditDietComponent","state","diet","cb","data","setState","$","ajax","url","props","params","dietId","done","evt","preventDefault","method","dietName","value","calories","fats","carbs","protein","dietData","loadUser","ReactRouter","browserHistory","goBack","console","log","map","index","editDiet","input","name","fat","carbohydrates","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAM;AAAA,MAECE,iBAFD;AAAA;;AAIH,iCAAc;AAAA;;AAAA;;AAEZ,YAAKC,KAAL,GAAa,EAAEC,MAAM,EAAEA,MAAM,EAAR,EAAR,EAAb;AAFY;AAGb;;AAPE;AAAA;AAAA,0CASiB;AAAA;;AAClB,YAAIC,KAAK,SAALA,EAAK,CAACC,IAAD,EAAU;AACjB,iBAAKC,QAAL,CAAc;AACZH,kBAAME;AADM,WAAd;AAGD,SAJD;;AAMAE,UAAEC,IAAF,CAAO;AACLC,eAAK,eAAe,KAAKC,KAAL,CAAWC,MAAX,CAAkBC;AADjC,SAAP,EAGCC,IAHD,CAGM,UAACR,IAAD,EAAU;AACdD,aAAGC,IAAH;AACD,SALD;AAOD;AAvBE;AAAA;AAAA,+BAyBMS,GAzBN,EAyBW;;AAEZA,YAAIC,cAAJ;;AAEAR,UAAEC,IAAF,CAAO;AACLC,eAAK,eAAe,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MADjC;AAELI,kBAAQ,MAFH;AAGLX,gBAAM;AACJF,kBAAM,KAAKc,QAAL,CAAcC,KADhB;AAEJC,sBAAU,KAAKA,QAAL,CAAcD,KAFpB;AAGJE,kBAAM,KAAKA,IAAL,CAAUF,KAHZ;AAIJG,mBAAO,KAAKA,KAAL,CAAWH,KAJd;AAKJI,qBAAS,KAAKA,OAAL,CAAaJ;AALlB;AAHD,SAAP,EAWCL,IAXD,CAWM,UAACR,IAAD,EAAU;AACdN,aAAGwB,QAAH,CAAYC,QAAZ;AACAC,sBAAYC,cAAZ,CAA2BC,MAA3B;AACD,SAdD;AAgBD;AA7CE;AAAA;AAAA,+BA+CM;AAAA;;AACPC,gBAAQC,GAAR,CAAY,KAAK3B,KAAL,CAAWC,IAAX,CAAgBA,IAA5B;AACA,eAAO;AAAA;AAAA,YAAK,WAAU,kBAAf;AAAkC;AAAA;AAAA,cAAI,WAAU,eAAd;AAAA;AAAA,WAAlC;AACN,eAAKD,KAAL,CAAWC,IAAX,CAAgBA,IAAhB,CAAqB2B,GAArB,CAAyB,UAAC3B,IAAD,EAAO4B,KAAP,EAAiB;AACzC,mBAAO;AAAA;AAAA,gBAAM,KAAKA,KAAX,EAAkB,WAAU,YAA5B,EAAyC,UAAU,kBAACjB,GAAD,EAAS;AAAE,yBAAKkB,QAAL,CAAclB,GAAd;AAAqB,iBAAnF;AAAqF,6CAAO,KAAK,aAACmB,KAAD,EAAW;AAAE,yBAAKhB,QAAL,GAAgBgB,KAAhB;AAAuB,iBAAhD,EAAkD,cAAc9B,KAAK+B,IAArE,GAArF;AACL,6CAAO,KAAK,aAACD,KAAD,EAAW;AAAE,yBAAKd,QAAL,GAAgBc,KAAhB;AAAuB,iBAAhD,EAAkD,cAAc9B,KAAKgB,QAArE,GADK;AAEL,6CAAO,KAAK,aAACc,KAAD,EAAW;AAAE,yBAAKb,IAAL,GAAYa,KAAZ;AAAmB,iBAA5C,EAA8C,cAAc9B,KAAKgC,GAAjE,GAFK;AAGL,6CAAO,KAAK,aAACF,KAAD,EAAW;AAAE,yBAAKZ,KAAL,GAAaY,KAAb;AAAoB,iBAA7C,EAA+C,cAAc9B,KAAKiC,aAAlE,GAHK;AAIL,6CAAO,KAAK,aAACH,KAAD,EAAW;AAAE,yBAAKX,OAAL,GAAeW,KAAf;AAAsB,iBAA/C,EAAiD,cAAc9B,KAAKmB,OAApE,GAJK;AAKL;AAAA;AAAA;AAAA;AAAA;AALK,aAAP;AAOD,WARA;AADM,SAAP;AAWD;AA5DE;;AAAA;AAAA,IAE2Be,MAAMC,SAFjC;;AA+DPvC,KAAGE,iBAAH,GAAuBA,iBAAvB;AACC,CAhED","file":"EditDietComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(() => {\n\n  class EditDietComponent extends React.Component {\n\n    constructor() {\n      super();\n      this.state = { diet: { diet: [] } }\n    }\n\n    componentDidMount() {\n      var cb = (data) => {\n        this.setState({\n          diet: data\n        });\n      }\n\n      $.ajax({\n        url: \"/api/diet/\" + this.props.params.dietId\n      })\n      .done((data) => {\n        cb(data);\n      });\n\n    }\n\n    editDiet(evt) {\n\n      evt.preventDefault();\n\n      $.ajax({\n        url: \"/api/diet/\" + this.props.params.dietId,\n        method: \"POST\",\n        data: {\n          diet: this.dietName.value,\n          calories: this.calories.value,\n          fats: this.fats.value,\n          carbs: this.carbs.value,\n          protein: this.protein.value\n        }\n      })\n      .done((data) => {\n        FC.dietData.loadUser();\n        ReactRouter.browserHistory.goBack();\n      })\n\n    }\n\n    render() {\n      console.log(this.state.diet.diet);\n      return <div className=\"search-container\"><h1 className=\"react-form-h1\">Edit Active Diet</h1>\n      {this.state.diet.diet.map((diet, index) => {\n        return <form key={index} className=\"react-form\" onSubmit={(evt) => { this.editDiet(evt); }}><input ref={(input) => { this.dietName = input }} defaultValue={diet.name}></input>\n          <input ref={(input) => { this.calories = input }} defaultValue={diet.calories}></input>\n          <input ref={(input) => { this.fats = input }} defaultValue={diet.fat}></input>\n          <input ref={(input) => { this.carbs = input }} defaultValue={diet.carbohydrates}></input>\n          <input ref={(input) => { this.protein = input }} defaultValue={diet.protein}></input>\n          <button>Save Changes</button>\n        </form>\n      })}\n      </div>\n    }\n  }\n\nFC.EditDietComponent = EditDietComponent;\n})();\n"]}