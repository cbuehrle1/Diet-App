{"version":3,"sources":["components/CreateDietComponent.js"],"names":["window","FC","undefined","CreateDietComponent","evt","preventDefault","$","ajax","url","method","data","diet","dietName","value","calories","fats","carbs","protein","done","dietData","loadUser","ReactRouter","browserHistory","goBack","saveDiet","input","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAM;AAAA,MAECE,mBAFD;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAIMC,GAJN,EAIW;AACZA,YAAIC,cAAJ;;AAEAC,UAAEC,IAAF,CAAO;AACLC,eAAK,WADA;AAELC,kBAAQ,MAFH;AAGLC,gBAAM;AACJC,kBAAM,KAAKC,QAAL,CAAcC,KADhB;AAEJC,sBAAU,KAAKA,QAAL,CAAcD,KAFpB;AAGJE,kBAAM,KAAKA,IAAL,CAAUF,KAHZ;AAIJG,mBAAO,KAAKA,KAAL,CAAWH,KAJd;AAKJI,qBAAS,KAAKA,OAAL,CAAaJ;AALlB;AAHD,SAAP,EAWCK,IAXD,CAWM,UAACR,IAAD,EAAU;AACdT,aAAGkB,QAAH,CAAYC,QAAZ;AACAC,sBAAYC,cAAZ,CAA2BC,MAA3B;AACD,SAdD;AAeD;AAtBE;AAAA;AAAA,+BAwBM;AAAA;;AACP,eAAO;AAAA;AAAA,YAAK,WAAU,kBAAf;AAAkC;AAAA;AAAA;AAAA;AAAA,WAAlC;AACP;AAAA;AAAA,cAAM,UAAU,kBAACnB,GAAD,EAAS;AAAE,uBAAKoB,QAAL,CAAcpB,GAAd;AAAqB,eAAhD;AACE,2CAAO,KAAK,aAACqB,KAAD,EAAW;AAAE,uBAAKb,QAAL,GAAgBa,KAAhB;AAAuB,eAAhD,EAAkD,aAAY,WAA9D,GADF;AAEE,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKX,QAAL,GAAgBW,KAAhB;AAAuB,eAAhD,EAAkD,aAAY,sBAA9D,GAFF;AAGE,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKV,IAAL,GAAYU,KAAZ;AAAmB,eAA5C,EAA8C,aAAY,kBAA1D,GAHF;AAIE,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKT,KAAL,GAAaS,KAAb;AAAoB,eAA7C,EAA+C,aAAY,mBAA3D,GAJF;AAKE,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKR,OAAL,GAAeQ,KAAf;AAAsB,eAA/C,EAAiD,aAAY,sBAA7D,GALF;AAME;AAAA;AAAA;AAAA;AAAA;AANF;AADO,SAAP;AAUD;AAnCE;;AAAA;AAAA,IAE6BC,MAAMC,SAFnC;;AAsCL1B,KAAGE,mBAAH,GAAyBA,mBAAzB;AAED,CAxCD","file":"CreateDietComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(() => {\n\n  class CreateDietComponent extends React.Component {\n\n    saveDiet(evt) {\n      evt.preventDefault();\n\n      $.ajax({\n        url: \"/api/diet\",\n        method: \"POST\",\n        data: {\n          diet: this.dietName.value,\n          calories: this.calories.value,\n          fats: this.fats.value,\n          carbs: this.carbs.value,\n          protein: this.protein.value\n        }\n      })\n      .done((data) => {\n        FC.dietData.loadUser();\n        ReactRouter.browserHistory.goBack();\n      })\n    }\n\n    render() {\n      return <div className=\"search-container\"><h1>Create a Diet</h1>\n      <form onSubmit={(evt) => { this.saveDiet(evt); }}>\n        <input ref={(input) => { this.dietName = input }} placeholder=\"Diet Name\" />\n        <input ref={(input) => { this.calories = input }} placeholder=\"Target Calorie Count\" />\n        <input ref={(input) => { this.fats = input }} placeholder=\"Target Fat Count\" />\n        <input ref={(input) => { this.carbs = input }} placeholder=\"Target Carb Count\" />\n        <input ref={(input) => { this.protein = input }} placeholder=\"Target Protein Count\" />\n        <button>Create Diet</button>\n      </form>\n      </div>\n    }\n  }\n\n  FC.CreateDietComponent = CreateDietComponent;\n\n})()\n"]}