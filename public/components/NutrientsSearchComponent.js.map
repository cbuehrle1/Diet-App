{"version":3,"sources":["components/NutrientsSearchComponent.js"],"names":["window","FC","undefined","NutrientsSearchComponent","state","form","advancedForm","evt","preventDefault","queryStr","queryInput","value","maxCalories","maxFat","maxCarbs","maxProtein","$","ajax","url","type","beforeSend","xhr","setRequestHeader","done","data","console","log","results","setState","searchForm","callSearch","input","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAM;AAAA,MAECE,wBAFD;AAAA;;AAIH,wCAAc;AAAA;;AAAA;;AAEZ,YAAKC,KAAL,GAAa,EAAEC,MAAM,IAAR,EAAcC,cAAc,KAA5B,EAAb;AAFY;AAGb;;AAPE;AAAA;AAAA,iCASQC,GATR,EASa;AAAA;;AACdA,YAAIC,cAAJ;;AAEA,YAAIC,WAAW,KAAKC,UAAL,CAAgBC,KAA/B;AACA,YAAIC,cAAc,KAAKA,WAAL,CAAiBD,KAAnC;AACA,YAAIE,SAAS,KAAKA,MAAL,CAAYF,KAAzB;AACA,YAAIG,WAAW,KAAKA,QAAL,CAAcH,KAA7B;AACA,YAAII,aAAa,KAAKA,UAAL,CAAgBJ,KAAjC;;AAEAK,UAAEC,IAAF,CAAO;AACLC,eAAK,qHAAqHN,WAArH,GAAmI,YAAnI,GAAkJE,QAAlJ,GAA6J,UAA7J,GAA0KD,MAA1K,GAAmL,cAAnL,GAAoME,UAApM,GAAiN,4BAAjN,GAAgPN,QAAhP,GAA2P,YAD3P;AAELU,gBAAM,KAFD;AAGNC,sBAAY,oBAAUC,GAAV,EAAe;AAC1BA,gBAAIC,gBAAJ,CAAqB,eAArB,EAAsC,oDAAtC;AACED,gBAAIC,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;AACF;AANK,SAAP,EAQCC,IARD,CAQM,UAACC,IAAD,EAAU;AACdC,kBAAQC,GAAR,CAAYF,KAAKG,OAAjB;AACA,iBAAKC,QAAL,CAAc;AACZvB,kBAAM;AADM,WAAd;AAID,SAdD;AAgBD;AAlCE;AAAA;AAAA,+BAoCM;AAAA;;AACP,YAAIwB,UAAJ;;AAEA,YAAI,KAAKzB,KAAL,CAAWC,IAAX,KAAoB,IAAxB,EAA8B;AAC5BwB,uBAAa;AAAA;AAAA,cAAM,UAAU,kBAACtB,GAAD,EAAS;AAAE,uBAAKuB,UAAL,CAAgBvB,GAAhB;AAAqB,eAAhD;AAAkD,2CAAO,KAAK,aAACwB,KAAD,EAAW;AAAE,uBAAKrB,UAAL,GAAkBqB,KAAlB;AAAyB,eAAlD,EAAoD,aAAY,gBAAhE,GAAlD;AACb,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKnB,WAAL,GAAmBmB,KAAnB;AAAyB,eAAlD,EAAoD,aAAY,cAAhE,GADa;AAEb,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKlB,MAAL,GAAckB,KAAd;AAAoB,eAA7C,EAA+C,aAAY,SAA3D,GAFa;AAGb,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKjB,QAAL,GAAgBiB,KAAhB;AAAsB,eAA/C,EAAiD,aAAY,mBAA7D,GAHa;AAIb,2CAAO,KAAK,aAACA,KAAD,EAAW;AAAE,uBAAKhB,UAAL,GAAkBgB,KAAlB;AAAwB,eAAjD,EAAmD,aAAY,aAA/D,GAJa;AAKb;AAAA;AAAA;AAAA;AAAA;AALa,WAAb;AAMD,SAPD,MAOO;AACLF,uBAAa;AAAA;AAAA;AAAA;AAAA,WAAb;AACD;;AAED,eAAO;AAAA;AAAA,YAAK,WAAU,kBAAf;AAAkC;AAAA;AAAA;AAAA;AAAA,WAAlC;AACNA;AADM,SAAP;AAED;AApDE;;AAAA;AAAA,IAEkCG,MAAMC,SAFxC;;AAuDLhC,KAAGE,wBAAH,GAA8BA,wBAA9B;AAED,CAzDD","file":"NutrientsSearchComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(() => {\n\n  class NutrientsSearchComponent extends React.Component {\n\n    constructor() {\n      super();\n      this.state = { form: true, advancedForm: false }\n    }\n\n    callSearch(evt) {\n      evt.preventDefault();\n\n      var queryStr = this.queryInput.value;\n      var maxCalories = this.maxCalories.value;\n      var maxFat = this.maxFat.value;\n      var maxCarbs = this.maxCarbs.value;\n      var maxProtein = this.maxProtein.value;\n\n      $.ajax({\n        url: \"https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/searchComplex?limitLicense=false&maxCalories=\" + maxCalories + \"&maxCarbs=\" + maxCarbs + \"&maxFat=\" + maxFat + \"&maxProtein=\" + maxProtein + \"&number=10&offset=0&query=\" + queryStr + \"&ranking=1\",\n        type: 'GET',\n      \tbeforeSend: function (xhr) {\n      \t\txhr.setRequestHeader(\"X-Mashape-Key\", \"lfLi0pd5ComshP5lbLvR2GHC5uP6p1b7AOujsnP5aI9GJrDgG1\");\n          xhr.setRequestHeader(\"Accept\", \"application/json\");\n      \t}\n      })\n      .done((data) => {\n        console.log(data.results);\n        this.setState({\n          form: false\n        });\n\n      });\n\n    }\n\n    render() {\n      var searchForm;\n\n      if (this.state.form === true) {\n        searchForm = <form onSubmit={(evt) => { this.callSearch(evt)}}><input ref={(input) => { this.queryInput = input }} placeholder=\"Recipe Keyword\" />\n        <input ref={(input) => { this.maxCalories = input}} placeholder=\"Max Calories\" />\n        <input ref={(input) => { this.maxFat = input}} placeholder=\"Max Fat\" />\n        <input ref={(input) => { this.maxCarbs = input}} placeholder=\"Max Carbohydrates\" />\n        <input ref={(input) => { this.maxProtein = input}} placeholder=\"Max Protein\" />\n        <button>Search</button></form>\n      } else {\n        searchForm = <div>Search Results</div>\n      }\n\n      return <div className=\"search-container\"><h1>Nutrients Search Thing</h1>\n      {searchForm}</div>\n    }\n  }\n\n  FC.NutrientsSearchComponent = NutrientsSearchComponent;\n\n})()\n"]}