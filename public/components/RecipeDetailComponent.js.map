{"version":3,"sources":["components/RecipeDetailComponent.js"],"names":["window","FC","undefined","RecipeDetailComponent","state","data","extendedIngredients","instructions","$","ajax","url","props","params","recipeId","type","beforeSend","xhr","setRequestHeader","done","dietData","storeRecipeInfo","setState","analyzedInstructions","steps","title","image","map","ingredient","index","originalString","step","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAM;AAAA,MAEDE,qBAFC;AAAA;;AAIL,qCAAc;AAAA;;AAAA;;AAEZ,YAAKC,KAAL,GAAa,EAAEC,MAAM,EAAEC,qBAAqB,EAAvB,EAAR,EAAqCC,cAAc,EAAnD,EAAb;AAFY;AAGb;;AAPI;AAAA;AAAA,0CASe;AAAA;;AAGlBC,UAAEC,IAAF,CAAO;AACLC,eAAK,wEAAwE,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,QAA1F,GAAqG,oCADrG;AAELC,gBAAM,KAFD;AAGLC,sBAAY,oBAAUC,GAAV,EAAe;AACzBA,gBAAIC,gBAAJ,CAAqB,eAArB,EAAsC,oDAAtC;AACAD,gBAAIC,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;AACD;AANI,SAAP,EAQCC,IARD,CAQM,UAACb,IAAD,EAAU;;AAEdJ,aAAGkB,QAAH,CAAYC,eAAZ,CAA4Bf,IAA5B;;AAEA,iBAAKgB,QAAL,CAAc;AACZhB,kBAAMA,IADM;AAEZE,0BAAcF,KAAKiB,oBAAL,CAA0B,CAA1B,EAA6BC;AAF/B,WAAd;AAKD,SAjBD;AAkBD;AA9BI;AAAA;AAAA,+BAgCI;;AAEP,eAAO;AAAA;AAAA,YAAK,WAAU,kBAAf;AAAkC,8BAAC,EAAD,CAAI,eAAJ,IAAoB,MAAM,KAAKnB,KAAL,CAAWC,IAArC,GAAlC;AAA8E;AAAA;AAAA;AAAK,iBAAKD,KAAL,CAAWC,IAAX,CAAgBmB;AAArB,WAA9E;AACL,uCAAK,WAAU,YAAf,EAA4B,KAAK,KAAKpB,KAAL,CAAWC,IAAX,CAAgBoB,KAAjD,GADK;AAEL;AAAA;AAAA;AAAA;AAAA,WAFK;AAGL;AAAA;AAAA,cAAI,WAAU,gBAAd;AAAgC,iBAAKrB,KAAL,CAAWC,IAAX,CAAgBC,mBAAhB,CAAoCoB,GAApC,CAAwC,UAACC,UAAD,EAAaC,KAAb,EAAuB;AAC7F,qBAAO;AAAA;AAAA,kBAAI,KAAKA,KAAT;AAAkBD,2BAAWE;AAA7B,eAAP;AACD,aAF+B;AAAhC,WAHK;AAOL;AAAA;AAAA;AAAA;AAAA,WAPK;AAQL;AAAA;AAAA,cAAI,WAAU,gBAAd;AACG,iBAAKzB,KAAL,CAAWG,YAAX,CAAwBmB,GAAxB,CAA4B,UAACI,IAAD,EAAOF,KAAP,EAAiB;AAC5C,qBAAO;AAAA;AAAA,kBAAI,KAAKA,KAAT;AAAiBE,qBAAKA;AAAtB,eAAP;AACD,aAFA;AADH;AARK,SAAP;AAcD;AAhDI;;AAAA;AAAA,IAE6BC,MAAMC,SAFnC;;AAmDP/B,KAAGE,qBAAH,GAA2BA,qBAA3B;AACC,CApDD","file":"RecipeDetailComponent.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(() => {\n\nclass RecipeDetailComponent extends React.Component {\n\n  constructor() {\n    super();\n    this.state = { data: { extendedIngredients: [] }, instructions: [] }\n  }\n\n  componentDidMount() {\n\n\n    $.ajax({\n      url: \"https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/\" + this.props.params.recipeId + \"/information?includeNutrition=true\",\n      type: 'GET',\n      beforeSend: function (xhr) {\n        xhr.setRequestHeader(\"X-Mashape-Key\", \"lfLi0pd5ComshP5lbLvR2GHC5uP6p1b7AOujsnP5aI9GJrDgG1\");\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n      }\n    })\n    .done((data) => {\n\n      FC.dietData.storeRecipeInfo(data);\n\n      this.setState({\n        data: data,\n        instructions: data.analyzedInstructions[0].steps\n      });\n\n    });\n  }\n\n  render() {\n\n    return <div className=\"search-container\"><FC.SaveToComponent data={this.state.data}/><h1>{this.state.data.title}</h1>\n      <img className=\"detail-img\" src={this.state.data.image} />\n      <h1>ingredients</h1>\n      <ul className=\"search-results\">{this.state.data.extendedIngredients.map((ingredient, index) => {\n        return <li key={index} >{ingredient.originalString}</li>;\n      })}\n      </ul>\n      <h1>instructions</h1>\n      <ol className=\"search-results\">\n        {this.state.instructions.map((step, index) => {\n          return <li key={index}>{step.step}</li>;\n        })}\n      </ol>\n    </div>\n  }\n}\n\nFC.RecipeDetailComponent = RecipeDetailComponent;\n})()\n"]}